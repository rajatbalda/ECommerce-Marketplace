// <auto-generated />
using System;
using AmazonFresh.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmazonFresh.Migrations
{
    [DbContext(typeof(AmazonFreshContext))]
    [Migration("20240326160952_productmodify")]
    partial class productmodify
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AmazonFresh.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoldCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseID")
                        .HasColumnType("int");

                    b.Property<int>("onSale")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("VendorID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Description = "Jammu Apple: Fresh, juicy apples from the orchards of Jammu. Crisp and delicious, perfect for snacking.",
                            Name = "Jammu Apple",
                            Price = 2.99m,
                            SoldCount = 10,
                            StockTimestamp = new DateTime(2024, 3, 21, 21, 39, 49, 742, DateTimeKind.Local).AddTicks(9682),
                            TotalQty = 15,
                            Unit = "gram",
                            VendorID = 1,
                            WarehouseID = 1,
                            onSale = 0
                        },
                        new
                        {
                            ProductID = 2,
                            Description = "Blue Berries: Plump, flavorful berries bursting with antioxidants and natural sweetness.",
                            Name = "Blue Berries",
                            Price = 10.79m,
                            SoldCount = 26,
                            StockTimestamp = new DateTime(2024, 4, 1, 21, 39, 49, 742, DateTimeKind.Local).AddTicks(9719),
                            TotalQty = 15,
                            Unit = "gram",
                            VendorID = 1,
                            WarehouseID = 1,
                            onSale = 1
                        },
                        new
                        {
                            ProductID = 3,
                            Description = "Raspberries: Tangy and succulent berries with vibrant color and refreshing taste.",
                            Name = "Rasberries",
                            Price = 0.79m,
                            SoldCount = 31,
                            StockTimestamp = new DateTime(2024, 3, 26, 21, 39, 49, 742, DateTimeKind.Local).AddTicks(9726),
                            TotalQty = 5,
                            Unit = "gram",
                            VendorID = 2,
                            WarehouseID = 2,
                            onSale = 1
                        },
                        new
                        {
                            ProductID = 4,
                            Description = "Grapefruits: Citrusy, juicy fruits with a tangy-sweet flavor, packed with vitamin C.",
                            Name = "GrapeFruits",
                            Price = 100.79m,
                            SoldCount = 5,
                            StockTimestamp = new DateTime(2024, 3, 26, 21, 39, 49, 742, DateTimeKind.Local).AddTicks(9732),
                            TotalQty = 3,
                            Unit = "box",
                            VendorID = 2,
                            WarehouseID = 2,
                            onSale = 0
                        });
                });

            modelBuilder.Entity("AmazonFresh.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            Name = "Sunrise Orchid"
                        },
                        new
                        {
                            VendorID = 2,
                            Name = "Fruits Junction"
                        },
                        new
                        {
                            VendorID = 3,
                            Name = "Fresh Topical Fruits"
                        });
                });

            modelBuilder.Entity("AmazonFresh.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseID");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseID = 1,
                            Name = "Chennai"
                        },
                        new
                        {
                            WarehouseID = 2,
                            Name = "Andrapradesh"
                        },
                        new
                        {
                            WarehouseID = 3,
                            Name = "Hyderabad"
                        });
                });

            modelBuilder.Entity("AmazonFresh.Models.Product", b =>
                {
                    b.HasOne("AmazonFresh.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazonFresh.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");

                    b.Navigation("Warehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
